#!/bin/sh -e
#
# The first stage update program.  The first stage attempts to update the
# second stage, and then dispatches the given command to it.
#

PATH=/bin:/usr/bin:/sbin:/usr/sbin:$PATH
test -n "$1" || {
	echo "usage: update COMMAND" >&2
	exit 1
}

get_key_package () {
	key=$(grep-aptavail \
		--field=Pragmatux-Key-Package \
		--pattern=1 \
		--exact-match \
		--show-field=Package \
		--no-field-names \
	| head -1)
	test -n "$key" && echo "$key"
}

dispatch () {
	command=$1
	shift
	base=/usr/lib/update/stage2/base/$command
	override=/usr/lib/update/stage2/override/$command

	if test -x $override; then
		exec $override "$@"
	elif test -x $base; then
		exec $base "$@"
	else
		echo "Command not found: $command" >&2
		return 1
	fi
}

echo "Updating stage 2..." >&2
unset config
test -n "$UPDATE_APTCONFIG" && config="-o Dir::Etc=$UPDATE_APTCONFIG"
apt-get -q $config update >&2 || true
apt-get -q $config -y --allow-unauthenticated install update >&2 || true
if key=$(get_key_package); then
	apt-get -q $config -y --allow-unauthenticated \
		install update-$key >&2 || true
else
	echo "Warning: no key package found" >&2
fi

dispatch "$@"
