#!/bin/sh -e

PATH=/bin:/usr/bin:/sbin:/usr/sbin

RETURN_UNREACHABLE=64
RETURN_INVALID=65

test_http_archive () {
	ARCHIVE=$2
	DIST=$3
	release_file=$ARCHIVE/dists/$DIST/Release
	http_status=$(curl \
		--url $release_file \
		--write-out '%{response_code}\n' \
		--max-time 15 \
		--silent \
		--output /dev/null) || return $RETURN_UNREACHABLE

	test "$http_status" = "200" || return $RETURN_INVALID
}

test_file_archive () {
	ARCHIVE=$2
	DIST=$3
	release_file=$ARCHIVE/dists/$DIST/Release
	test -r ${release_file#file://} || return $RETURN_INVALID
}

report_access_failure () {
	CODE=$1
	ARCHIVE=$3
	DIST=$4

	case $CODE in
		$RETURN_UNREACHABLE)
			echo "Unreachable archive: $ARCHIVE dist: $DIST" >&2
			;;
		$RETURN_INVALID)
			echo "Invalid archive: $ARCHIVE dist: $DIST" >&2
			;;
		*)
			echo "Failure $CODE with archive: $ARCHIVE dist: $DIST" >&2
			;;
	esac
}

test_archives () {
	cat $UPDATE_APTCONFIG/sources.list \
	    $UPDATE_APTCONFIG/sources.list.d/*.list 2>/dev/null \
	| grep '^deb\W\+' \
	| { while read LINE
	do
		if (echo $LINE | grep -q '^deb\W\+http:'); then
			test_fn=test_http_archive
		elif (echo $LINE | grep -q '^deb\W\+file:'); then
			test_fn=test_file_archive
		else
			# Don't fail unknown protocols. Pass and let apt-get
			# error if need be.
			test_fn=true
		fi

		$test_fn $LINE || {
			ERROR=$?
			report_access_failure $ERROR $LINE
		}
	done
	exit $ERROR; }
}

grep_aptavail_configured () {
	apt-cache $UPDATE_APTCONFIG_ARG dumpavail | grep-dctrl "$@"
}

print_outofdate_key_packages () {
	grep_aptavail_configured \
		--field=Pragmatux-Key-Package \
		--pattern=1 \
		--exact-match \
		--show-field=Package \
		--no-field-names \
	| while read package
	do
		v_available=$(grep_aptavail_configured -PX $package \
			--show-field=Version \
			--no-field-names)
		v_installed=$(grep-status -PX $package \
			--show-field=Version \
			--no-field-names || true)

		if [ -n "$v_installed" ] && \
		   dpkg --compare-versions $v_available gt $v_installed
		then
			echo "Package: $package"
			echo "Installed-Version: $v_installed"
			echo "Available-Version: $v_available"
			echo
		fi
	done
}

test_archives >&2 || exit $?
apt-get -q $UPDATE_APTCONFIG_ARG update >&2
print_outofdate_key_packages
